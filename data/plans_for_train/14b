Aggregate  (cost=37.78..37.79 rows=1 width=64) (actual time=0.012..0.012 rows=1 loops=1)
  ->  Nested Loop  (cost=6.19..37.77 rows=1 width=48) (actual time=0.011..0.012 rows=0 loops=1)
        ->  Nested Loop  (cost=6.04..37.40 rows=1 width=52) (actual time=0.011..0.011 rows=0 loops=1)
              ->  Nested Loop  (cost=5.62..36.94 rows=1 width=56) (actual time=0.011..0.011 rows=0 loops=1)
                    ->  Nested Loop  (cost=5.48..36.76 rows=1 width=60) (actual time=0.011..0.011 rows=0 loops=1)
                          Join Filter: (t.id = mi.movie_id)
                          ->  Nested Loop  (cost=5.04..34.25 rows=1 width=68) (actual time=0.011..0.011 rows=0 loops=1)
                                ->  Nested Loop  (cost=4.61..23.53 rows=1 width=60) (actual time=0.011..0.011 rows=0 loops=1)
                                      ->  Nested Loop  (cost=4.18..15.07 rows=1 width=36) (actual time=0.011..0.011 rows=0 loops=1)
                                            ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Bitmap Heap Scan on movie_info_idx mi_idx  (cost=4.18..12.65 rows=1 width=40) (actual time=0.002..0.002 rows=0 loops=1)
                                                  Recheck Cond: (info_type_id = it2.id)
                                                  Filter: (info > '6.0'::text)
                                                  ->  Bitmap Index Scan on info_type_id_movie_info_idx  (cost=0.00..4.18 rows=4 width=0) (actual time=0.001..0.001 rows=0 loops=1)
                                                        Index Cond: (info_type_id = it2.id)
                                      ->  Index Scan using title_pkey on title t  (cost=0.43..8.41 rows=1 width=24) (never executed)
                                            Index Cond: (id = mi_idx.movie_id)
                                            Filter: ((production_year > 2010) AND ((title ~~ '%murder%'::text) OR (title ~~ '%Murder%'::text) OR (title ~~ '%Mord%'::text)))
                                ->  Index Scan using movie_keyword_idx_mid on movie_keyword mk  (cost=0.43..10.09 rows=63 width=8) (never executed)
                                      Index Cond: (movie_id = t.id)
                          ->  Index Scan using movie_info_idx_mid on movie_info mi  (cost=0.44..2.49 rows=2 width=8) (never executed)
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (never executed)
                          Index Cond: (id = mi.info_type_id)
                          Filter: ((info)::text = 'countries'::text)
              ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (never executed)
                    Index Cond: (id = mk.keyword_id)
                    Filter: (keyword = ANY ('{murder,murder-in-title}'::text[]))
        ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.15..0.32 rows=1 width=4) (never executed)
              Index Cond: (id = t.kind_id)
              Filter: ((kind)::text = 'movie'::text)
Planning Time: 2.072 ms
Execution Time: 0.037 ms