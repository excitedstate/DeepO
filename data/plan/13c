Aggregate  (cost=76.72..76.73 rows=1 width=96) (actual time=0.015..0.016 rows=1 loops=1)
  ->  Nested Loop  (cost=6.35..76.72 rows=1 width=67) (actual time=0.014..0.015 rows=0 loops=1)
        ->  Nested Loop  (cost=6.20..76.43 rows=1 width=71) (actual time=0.014..0.014 rows=0 loops=1)
              ->  Nested Loop  (cost=6.05..76.24 rows=1 width=75) (actual time=0.014..0.014 rows=0 loops=1)
                    Join Filter: (t.id = mi.movie_id)
                    ->  Nested Loop  (cost=5.62..73.66 rows=1 width=83) (actual time=0.014..0.014 rows=0 loops=1)
                          ->  Nested Loop  (cost=5.47..73.49 rows=1 width=87) (actual time=0.013..0.014 rows=0 loops=1)
                                ->  Nested Loop  (cost=5.04..73.04 rows=1 width=72) (actual time=0.013..0.014 rows=0 loops=1)
                                      Join Filter: (t.id = mc.movie_id)
                                      ->  Nested Loop  (cost=4.61..48.16 rows=1 width=60) (actual time=0.013..0.014 rows=0 loops=1)
                                            ->  Nested Loop  (cost=4.18..15.09 rows=4 width=36) (actual time=0.013..0.014 rows=0 loops=1)
                                                  ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Bitmap Heap Scan on movie_info_idx miidx  (cost=4.18..12.64 rows=4 width=40) (actual time=0.002..0.002 rows=0 loops=1)
                                                        Recheck Cond: (info_type_id = it.id)
                                                        ->  Bitmap Index Scan on info_type_id_movie_info_idx  (cost=0.00..4.18 rows=4 width=0) (actual time=0.001..0.001 rows=0 loops=1)
                                                              Index Cond: (info_type_id = it.id)
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..8.26 rows=1 width=24) (never executed)
                                                  Index Cond: (id = miidx.movie_id)
                                                  Filter: ((title <> ''::text) AND ((title ~~ 'Champion%'::text) OR (title ~~ 'Loser%'::text)))
                                      ->  Index Scan using movie_companies_idx_mid on movie_companies mc  (cost=0.43..24.80 rows=6 width=12) (never executed)
                                            Index Cond: (movie_id = miidx.movie_id)
                                ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (never executed)
                                      Index Cond: (id = mc.company_id)
                                      Filter: ((country_code)::text = '[us]'::text)
                          ->  Index Scan using company_type_pkey on company_type ct  (cost=0.15..0.17 rows=1 width=4) (never executed)
                                Index Cond: (id = mc.company_type_id)
                                Filter: ((kind)::text = 'production companies'::text)
                    ->  Index Scan using movie_info_idx_mid on movie_info mi  (cost=0.44..1.81 rows=62 width=8) (never executed)
                          Index Cond: (movie_id = mc.movie_id)
              ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (never executed)
                    Index Cond: (id = mi.info_type_id)
                    Filter: ((info)::text = 'release dates'::text)
        ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.15..0.25 rows=1 width=4) (never executed)
              Index Cond: (id = t.kind_id)
              Filter: ((kind)::text = 'movie'::text)
Planning Time: 4.185 ms
Execution Time: 0.050 ms