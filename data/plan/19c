Finalize Aggregate  (cost=602835.44..602835.45 rows=1 width=64) (actual time=24340.614..24373.075 rows=1 loops=1)
  ->  Gather  (cost=602835.22..602835.43 rows=2 width=64) (actual time=24318.601..24372.379 rows=3 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Partial Aggregate  (cost=601835.22..601835.23 rows=1 width=64) (actual time=24303.633..24304.106 rows=1 loops=3)
              ->  Nested Loop  (cost=18.13..601835.21 rows=1 width=31) (actual time=3194.670..24301.400 rows=1341 loops=3)
                    ->  Nested Loop  (cost=17.71..601830.96 rows=1 width=35) (actual time=3194.068..24277.398 rows=2929 loops=3)
                          ->  Nested Loop  (cost=17.28..601817.96 rows=1 width=43) (actual time=3193.623..24248.567 rows=1819 loops=3)
                                Join Filter: (n.id = an.person_id)
                                ->  Nested Loop  (cost=16.85..601815.07 rows=1 width=51) (actual time=3158.672..24236.360 rows=737 loops=3)
                                      ->  Nested Loop  (cost=16.42..601801.95 rows=3 width=32) (actual time=2657.922..23826.409 rows=45203 loops=3)
                                            ->  Hash Join  (cost=15.99..601786.25 rows=6 width=36) (actual time=2657.061..23036.219 rows=46519 loops=3)
                                                  Hash Cond: (ci.role_id = rt.id)
                                                  ->  Nested Loop  (cost=3.30..601770.53 rows=1146 width=40) (actual time=2485.365..23015.812 rows=116565 loops=3)
                                                        ->  Nested Loop  (cost=2.86..510050.76 rows=1232 width=24) (actual time=2432.766..4018.718 rows=108750 loops=3)
                                                              ->  Hash Join  (cost=2.43..501903.09 rows=1862 width=4) (actual time=2421.734..3166.139 rows=180669 loops=3)
                                                                    Hash Cond: (mi.info_type_id = it.id)
                                                                    ->  Parallel Seq Scan on movie_info mi  (cost=0.00..501327.45 rows=210471 width=8) (actual time=2183.542..3102.037 rows=180692 loops=3)
                                                                          Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                                                          Rows Removed by Filter: 9744292
                                                                    ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.070..0.071 rows=1 loops=3)
                                                                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                          ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.053..0.061 rows=1 loops=3)
                                                                                Filter: ((info)::text = 'release dates'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..4.38 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=542008)
                                                                    Index Cond: (id = mi.movie_id)
                                                                    Filter: (production_year > 2000)
                                                                    Rows Removed by Filter: 0
                                                        ->  Index Scan using cast_info_idx_mid on cast_info ci  (cost=0.44..74.44 rows=1 width=16) (actual time=0.150..0.174 rows=1 loops=326251)
                                                              Index Cond: (movie_id = t.id)
                                                              Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                              Rows Removed by Filter: 16
                                                  ->  Hash  (cost=12.64..12.64 rows=4 width=4) (actual time=0.216..0.476 rows=1 loops=3)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Bitmap Heap Scan on role_type rt  (cost=4.18..12.64 rows=4 width=4) (actual time=0.209..0.396 rows=1 loops=3)
                                                              Recheck Cond: ((role)::text = 'actress'::text)
                                                              Heap Blocks: exact=1
                                                              ->  Bitmap Index Scan on role_type_role  (cost=0.00..4.18 rows=4 width=0) (actual time=0.162..0.171 rows=1 loops=3)
                                                                    Index Cond: ((role)::text = 'actress'::text)
                                            ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..2.62 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=139556)
                                                  Index Cond: (id = ci.person_role_id)
                                                  Heap Fetches: 23608
                                      ->  Index Scan using name_pkey on name n  (cost=0.43..4.38 rows=1 width=19) (actual time=0.009..0.009 rows=0 loops=135610)
                                            Index Cond: (id = ci.person_id)
                                            Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                            Rows Removed by Filter: 1
                                ->  Index Only Scan using aka_name_idx_person on aka_name an  (cost=0.43..2.86 rows=2 width=4) (actual time=0.014..0.015 rows=2 loops=2212)
                                      Index Cond: (person_id = ci.person_id)
                                      Heap Fetches: 965
                          ->  Index Scan using movie_companies_idx_mid on movie_companies mc  (cost=0.43..12.94 rows=6 width=8) (actual time=0.012..0.015 rows=2 loops=5457)
                                Index Cond: (movie_id = t.id)
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..4.25 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=8788)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text = '[us]'::text)
                          Rows Removed by Filter: 1
Planning Time: 14.924 ms
JIT:
  Functions: 194
  Options: Inlining true, Optimization true, Expressions true, Deforming true
  Timing: Generation 7.047 ms, Inlining 145.896 ms, Optimization 393.337 ms, Emission 295.136 ms, Total 841.416 ms
Execution Time: 24386.548 ms